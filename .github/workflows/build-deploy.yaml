name: Build and Deploy

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - main

env:
  ECR_REPOSITORY: repo_cicd_app
  TASK_DEFINITION_NAME: app-cicd-td
  CONTAINER_NAME: app-cicd-container
  ECS_SERVICE: app-cicd-service
  ECS_CLUSTER: ecs-cluster-cicd

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Connect to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: awssyncsession
          role-to-assume: ${{secrets.AWS_IAM_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build the image
        id: image-builded
        env:
          REGISTRY: ${{steps.ecr-login.outputs.registry}}
          TAG: latest
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:$TAG .
          docker push $REGISTRY/$ECR_REPOSITORY:$TAG

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Get current Task definition json
        run: |
          aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME --query taskDefinition > task-definition.json

      - name: Replace image in the ECS Task definition
        id: task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{env.CONTAINER_NAME}}
          image: ${{steps.image-builded.outputs.image}}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition
        with:
          task-definition: ${{steps.task-definition.outputs.task-definition}}
          service: ${{env.ECS_SERVICE}}
          cluster: ${{env.ECS_CLUSTER}}         